{"ast":null,"code":"import _classCallCheck from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/src/components/BoardTitle.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { ActionCable } from 'react-actioncable-provider';\n\nvar BoardTitle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoardTitle, _Component);\n\n  function BoardTitle(props) {\n    var _this;\n\n    _classCallCheck(this, BoardTitle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoardTitle).call(this, props));\n\n    _this.editTitle = function (title) {\n      _this.setState({\n        editMode: !_this.state.editMode\n      });\n    };\n\n    _this.unFocus = function (e) {\n      if (e.target.value !== \"\") {\n        _this.setState({\n          editMode: false,\n          title: e.target.value\n        });\n      } else {\n        _this.setState({\n          editMode: false,\n          title: \"DEFAULT TITLE\"\n        });\n      }\n\n      axios.put(\"https://ideadocs-api.herokuapp/api/v1/boards/\".concat(_this.state.id), {\n        board: {\n          boardtitle: e.target.value\n        }\n      }).then(function (res) {}).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.handleKey = function (e) {\n      if (e.key === 'Enter') {\n        if (e.target.value === \"\") {\n          _this.setState({\n            title: \"DEFAULT TITLE\",\n            editMode: false\n          });\n        } else {\n          _this.setState({\n            editMode: false,\n            title: e.target.value\n          });\n        }\n\n        axios.put(\"https://ideadocs-api.herokuapp/api/v1/boards/\".concat(_this.state.id), {\n          board: {\n            boardtitle: e.target.value\n          }\n        }).then(function (res) {\n          console.log(res);\n          console.log(res.data);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      }\n    };\n\n    _this.handleBoardEvents = function (_ref) {\n      var event = _ref.event,\n          board = _ref.board;\n\n      switch (event) {\n        case 'updated':\n          _this.setState({\n            title: board.boardtitle\n          });\n\n          break;\n\n        default:\n          console.warn(\"Unhandled event type\");\n      }\n    };\n\n    _this.state = {\n      title: \"\",\n      editMode: false,\n      id: null\n    };\n    _this.handleBoardEvents = _this.handleBoardEvents.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BoardTitle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://ideadocs-api.herokuapp/api/v1/boards.json').then(function (response) {\n        var title = response.data[0].boardtitle;\n\n        _this2.setState({\n          boards: response.data,\n          title: title === \"\" ? \"DEFAULT TITLE\" : title,\n          id: response.data[0].id\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ActionCable, {\n        channel: {\n          channel: \"BoardsChannel\"\n        },\n        onReceived: this.handleBoardEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), this.state.editMode ? React.createElement(\"input\", {\n        defaultValue: this.state.title,\n        onBlur: this.unFocus,\n        onKeyDown: this.handleKey,\n        style: {\n          width: \"100%\",\n          height: \"30px\",\n          fontSize: \"30px\"\n        },\n        onClick: this.changeTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"titlediv\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"boardtitle\",\n        onClick: this.editTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.title)));\n    }\n  }]);\n\n  return BoardTitle;\n}(Component);\n\nexport default BoardTitle;","map":{"version":3,"sources":["/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/src/components/BoardTitle.js"],"names":["React","Component","ReactDOM","axios","ActionCable","BoardTitle","props","editTitle","title","setState","editMode","state","unFocus","e","target","value","put","id","board","boardtitle","then","res","catch","error","console","log","handleKey","key","data","handleBoardEvents","event","warn","bind","get","response","boards","channel","width","height","fontSize","changeTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport { ActionCable } from 'react-actioncable-provider'\n\n\nclass BoardTitle extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      editMode: false,\n      id: null\n    }\n\n    this.handleBoardEvents = this.handleBoardEvents.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get('https://ideadocs-api.herokuapp/api/v1/boards.json')\n    .then(response => {\n      const title = response.data[0].boardtitle\n\n      this.setState({boards: response.data,\n        title: title === \"\" ? \"DEFAULT TITLE\" : title,\n        id: response.data[0].id\n      })\n    })\n    .catch(error => console.log(error))\n  }\n\n  editTitle = (title) => {\n    this.setState({\n      editMode: !this.state.editMode\n    })\n  }\n\n  unFocus = (e) => {\n    if (e.target.value !== \"\") {\n      this.setState({\n        editMode: false,\n        title: e.target.value\n      })\n    } else {\n      this.setState({\n        editMode: false,\n        title: \"DEFAULT TITLE\"\n      })\n    }\n    axios\n      .put(`https://ideadocs-api.herokuapp/api/v1/boards/${this.state.id}`, {board: {boardtitle: e.target.value}})\n      .then( res => {\n    })\n    .catch(error => console.log(error))\n  }\n\n  handleKey = (e) => {\n    if (e.key === 'Enter') {\n      if (e.target.value === \"\") {\n        this.setState({\n          title: \"DEFAULT TITLE\",\n          editMode: false\n        })\n      } else {\n        this.setState({\n          editMode: false,\n          title: e.target.value\n        })\n      }\n\n      axios\n        .put(`https://ideadocs-api.herokuapp/api/v1/boards/${this.state.id}`, { board: { boardtitle: e.target.value } })\n        .then( res => {\n          console.log(res);\n          console.log(res.data)\n        })\n        .catch(error => console.log(error))\n    }\n  }\n\n  handleBoardEvents = ({event, board}) => {\n    switch(event) {\n      case 'updated':\n        this.setState({title: board.boardtitle})\n        break\n      default:\n        console.warn(\"Unhandled event type\")\n    }\n  }\n\n\n\n  render(){\n    return(\n      <div className=\"title\">\n        <ActionCable\n          channel={{channel: \"BoardsChannel\"}}\n          onReceived={this.handleBoardEvents}\n        />\n        {\n          this.state.editMode ?\n          <input defaultValue={this.state.title} onBlur={this.unFocus} onKeyDown={this.handleKey} style={{width:\"100%\", height:\"30px\", fontSize:\"30px\"}}  onClick={this.changeTitle}/>\n          :\n          <div className = \"titlediv\" align=\"center\">\n          <h1 className=\"boardtitle\" onClick={this.editTitle}>{this.state.title}</h1>\n          </div>\n        }\n      </div>\n\n    );\n  }\n}\n\nexport default BoardTitle\n"]},"metadata":{},"sourceType":"module"}