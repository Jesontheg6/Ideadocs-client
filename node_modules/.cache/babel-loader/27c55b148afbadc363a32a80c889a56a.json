{"ast":null,"code":"import _defineProperty from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/src/components/IdeasContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Idea from './Idea';\nimport update from 'immutability-helper';\nimport Color from './Color';\nimport { ActionCable } from 'react-actioncable-provider';\n\nvar IdeasContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IdeasContainer, _Component);\n\n  function IdeasContainer(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasContainer).call(this, props));\n    _this.state = {\n      ideas: [],\n      editingIdeaID: null,\n      editingTitleID: null,\n      notification: '',\n      selected: null,\n      color: \" \",\n      displayColorPicker: false\n    };\n\n    _this.handleReceivedIdeaEvent = function (_ref) {\n      var event = _ref.event,\n          idea = _ref.idea;\n\n      switch (event) {\n        case 'created':\n          _this.setState(function (prevState) {\n            var currentIds = prevState.ideas.map(function (i) {\n              return i.id;\n            });\n            var isIdeaNotRendered = !currentIds.includes(idea.id);\n\n            if (isIdeaNotRendered) {\n              var ideas = update(_this.state.ideas, {\n                $push: [idea]\n              });\n\n              _this.setState({\n                ideas: ideas\n              });\n            }\n          });\n\n          break;\n\n        case 'updated':\n          _this.setState(function (prevState) {\n            var index = prevState.ideas.map(function (i) {\n              return i.id;\n            }).indexOf(idea.id);\n            var ideas = update(prevState.ideas, _defineProperty({}, index, {\n              $set: idea\n            }));\n            return {\n              ideas: ideas\n            };\n          });\n\n          break;\n\n        case 'deleted':\n          _this.setState(function (prevState) {\n            var ideas = prevState.ideas.filter(function (item) {\n              if (item.id !== idea.id) {\n                return item;\n              }\n            });\n            return {\n              ideas: ideas\n            };\n          });\n\n          break;\n\n        default:\n          console.warn(\"Unhandled event type\");\n      }\n    };\n\n    _this.addNewIdea = function () {\n      axios.post('https://ideadocs-api.herokuapp.com/api/v1/ideas', {\n        idea: {\n          title: '',\n          body: '',\n          color: ''\n        }\n      }).then(function (response) {\n        var ideas = update(_this.state.ideas, {\n          $push: [response.data]\n        });\n\n        _this.setState({\n          ideas: ideas,\n          editingIdeaID: response.data.id\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.updateIdea = function (idea) {\n      var ideaIndex = _this.state.ideas.findIndex(function (x) {\n        return x.id === idea.id;\n      });\n\n      var ideas = update(_this.state.ideas, _defineProperty({}, ideaIndex, {\n        $set: idea\n      }));\n\n      _this.setState({\n        ideas: ideas\n      });\n\n      _this.props.onChange(\"All changes saved\");\n\n      _this.props.setTransitionIn(true);\n\n      _this.sub.send({\n        ideas: idea.target.value,\n        id: idea.id\n      });\n    };\n\n    _this.deleteIdea = function (id) {\n      axios.delete(\"https://ideadocs-api.herokuapp.com/api/v1/ideas/\".concat(id)).then(function (response) {\n        var ideaIndex = _this.state.ideas.findIndex(function (x) {\n          return x.id === id;\n        });\n\n        var ideas = update(_this.state.ideas, {\n          $splice: [[ideaIndex, 1]]\n        });\n\n        _this.setState({\n          ideas: ideas\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.enableEditing = function (id) {\n      _this.setState({\n        editingIdeaID: id\n      }, function () {\n        _this.title.focus();\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleEditing = function (id) {\n      _this.setState({\n        editingTitleID: id\n      });\n    };\n\n    _this.closeBox = function () {\n      setTimeout(function () {\n        _this.setState({\n          displayColorPicker: false\n        });\n      }, 200);\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.handleChangeStateColor = function (color) {\n      console.log(color);\n    };\n\n    _this.references = new Map();\n    _this.selected = _this.selected.bind(_assertThisInitialized(_this));\n    _this.handleReceivedIdeaEvent = _this.handleReceivedIdeaEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IdeasContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://ideadocs-api.herokuapp.com/api/v1/ideas.json').then(function (response) {\n        _this2.setState({\n          ideas: response.data\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"selected\",\n    value: function selected(e) {\n      var selectedRef = this.references.get(e);\n      this.setState({\n        selected: selectedRef,\n        displayColorPicker: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var ideas = this.state.ideas.map(function (idea) {\n        return React.createElement(Idea, {\n          color: _this3.state.color,\n          closeBox: _this3.closeBox,\n          className: \"tile\",\n          idea: idea,\n          key: \"\".concat(idea.id, \"-\").concat(idea.updated_at),\n          handleChangeStateColor: _this3.handleChangeStateColor,\n          updateIdea: _this3.updateIdea,\n          titleRef: function titleRef(input) {\n            return _this3.title = input;\n          },\n          resetNotification: _this3.props.resetNotification,\n          onDelete: _this3.deleteIdea,\n          onChangeComplete: _this3.handleChangeComplete,\n          ref: function ref(c) {\n            return _this3.references.set(idea.id, c);\n          },\n          onClick: function onClick() {\n            _this3.enableEditing && _this3.selected(idea.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-title\",\n        onClick: this.handleEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"newideabtn-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"color-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleUnselect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Color, {\n        changeColor: this.changeColor,\n        className: \"color-div\",\n        selected: this.state.selected,\n        color: this.state.color,\n        displayColorPicker: this.state.displayColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pretty-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, ideas), React.createElement(\"button\", {\n        className: \"newIdeaButton\",\n        onClick: this.addNewIdea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return IdeasContainer;\n}(Component);\n\nexport default IdeasContainer;","map":{"version":3,"sources":["/Users/JesonLeejunzhen/Ideadocs-client/ideaboard2/src/components/IdeasContainer.js"],"names":["React","Component","axios","Idea","update","Color","ActionCable","IdeasContainer","props","state","ideas","editingIdeaID","editingTitleID","notification","selected","color","displayColorPicker","handleReceivedIdeaEvent","event","idea","setState","prevState","currentIds","map","i","id","isIdeaNotRendered","includes","$push","index","indexOf","$set","filter","item","console","warn","addNewIdea","post","title","body","then","response","data","catch","error","log","updateIdea","ideaIndex","findIndex","x","onChange","setTransitionIn","sub","send","target","value","deleteIdea","delete","$splice","enableEditing","focus","handleClick","handleEditing","closeBox","setTimeout","changeColor","handleChangeStateColor","references","Map","bind","get","e","selectedRef","updated_at","input","resetNotification","handleChangeComplete","c","set","handleUnselect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Idea from './Idea'\nimport update from 'immutability-helper'\nimport Color from './Color'\nimport { ActionCable } from 'react-actioncable-provider'\n\nclass IdeasContainer extends Component {\n  state =  {\n    ideas: [] ,\n    editingIdeaID: null,\n    editingTitleID: null,\n    notification: '',\n    selected: null,\n    color: \" \",\n    displayColorPicker: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.references = new Map()\n    this.selected = this.selected.bind(this)\n    this.handleReceivedIdeaEvent = this.handleReceivedIdeaEvent.bind(this)\n  }\n\n  componentDidMount() {\n   axios.get('https://ideadocs-api.herokuapp.com/api/v1/ideas.json')\n    .then(response => { this.setState({ ideas: response.data }) })\n    .catch(error => console.log(error))\n  }\n\n   handleReceivedIdeaEvent = ({ event, idea }) => {\n    switch(event) {\n      case 'created':\n        this.setState(prevState => {\n          const currentIds = prevState.ideas.map(i => i.id)\n          const isIdeaNotRendered = !currentIds.includes(idea.id)\n\n          if (isIdeaNotRendered) {\n            const ideas = update(this.state.ideas, {$push: [idea]})\n            this.setState({ideas})\n          }\n        })\n        break\n      case 'updated':\n        this.setState(prevState => {\n          const index = prevState.ideas.map(i => i.id).indexOf(idea.id)\n          const ideas = update(prevState.ideas, {[index]: {$set: idea}})\n          return { ideas }\n        })\n        break\n      case 'deleted':\n        this.setState(prevState => {\n          const ideas = prevState.ideas.filter((item) => {\n            if (item.id !== idea.id) {\n              return item\n            }\n          })\n\n          return { ideas }\n        })\n        break\n      default:\n        console.warn(\"Unhandled event type\")\n    }\n  }\n\n  addNewIdea = () => {\n    axios.post(\n      'https://ideadocs-api.herokuapp.com/api/v1/ideas',\n      {\n        idea: {\n          title: '',\n          body: '',\n          color: ''\n        }\n      }\n    )\n    .then(response => {\n      const ideas = update(this.state.ideas, {$push: [response.data]})\n      this.setState({ideas: ideas, editingIdeaID: response.data.id})\n    })\n    .catch(error => console.log(error))\n  }\n\n  updateIdea = (idea) => {\n    const ideaIndex = this.state.ideas.findIndex(x => x.id === idea.id)\n    const ideas = update(this.state.ideas, {[ideaIndex]: {$set:idea}})\n    this.setState({ideas: ideas})\n\n    this.props.onChange(\"All changes saved\");\n    this.props.setTransitionIn(true)\n    this.sub.send({ ideas: idea.target.value, id: idea.id})\n  }\n\n  deleteIdea = (id) => {\n    axios.delete(`https://ideadocs-api.herokuapp.com/api/v1/ideas/${id}`)\n    .then(response => {\n      const ideaIndex = this.state.ideas.findIndex(x => x.id === id)\n      const ideas = update(this.state.ideas, { $splice: [[ideaIndex, 1]]})\n      this.setState({ideas: ideas})\n    })\n    .catch(error => console.log(error))\n  }\n\n  enableEditing = (id) => {\n    this.setState({editingIdeaID: id}, () => {this.title.focus() })\n  }\n\n  // color\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  selected(e) {\n    let selectedRef = this.references.get(e)\n    this.setState({ selected: selectedRef, displayColorPicker: true })\n  }\n\n  handleEditing = (id) => {\n    this.setState({editingTitleID: id})\n  }\n\n  closeBox = () => {\n    setTimeout(() => {\n      this.setState({ displayColorPicker: false })\n    }, 200);\n  }\n  changeColor = (color) => {\n    this.setState({color});\n  }\n\n  handleChangeStateColor = (color) => {\n    console.log(color)\n  }\n\n  render() {\n    const ideas = this.state.ideas.map((idea) => {\n      return(\n        <Idea\n          color={this.state.color}\n          closeBox={ this.closeBox }\n          className=\"tile\"\n          idea={idea}\n          key={`${idea.id}-${idea.updated_at}`}\n          handleChangeStateColor={this.handleChangeStateColor}\n          updateIdea={this.updateIdea}\n          titleRef = {input => this.title = input}\n          resetNotification={this.props.resetNotification}\n          onDelete={this.deleteIdea}\n          onChangeComplete={ this.handleChangeComplete }\n          ref = {c => this.references.set(idea.id, c)}\n          onClick={() => {this.enableEditing && this.selected(idea.id)}}\n        />\n      )\n    })\n\n    return (\n      <div>\n      \n\n        <div className=\"main-div\">\n          <div className=\"board-title\" onClick={this.handleEditing}>\n          </div>\n          <div className=\"newideabtn-div\">\n          </div>\n          <div className=\"color-div\">\n            <div onClick={ this.handleUnselect }/>\n            <Color\n              changeColor={this.changeColor}\n              className=\"color-div\"\n              selected={this.state.selected}\n              color={this.state.color}\n              displayColorPicker={this.state.displayColorPicker}\n            />\n          </div>\n\n          <div className=\"pretty-div\"></div>\n        </div>\n\n        <div>\n          {ideas}\n        </div>\n\n        <button className= \"newIdeaButton\" onClick={this.addNewIdea}>+</button>\n      </div>\n    )\n  }\n}\n\nexport default IdeasContainer\n"]},"metadata":{},"sourceType":"module"}